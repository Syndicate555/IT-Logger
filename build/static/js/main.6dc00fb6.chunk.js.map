{"version":3,"sources":["assets/default1.png","assets/default.png","actions/logActions.js","actions/types.js","components/layout/SearchBar.js","components/layout/AddBtn.js","components/logs/LogItem.js","components/layout/Preloader.js","components/logs/Logs.js","actions/techActions.js","components/techs/TechSelectOptions.js","components/logs/AddLogModal.js","components/logs/EditLogModal.js","components/techs/AddTechModal.js","components/techs/TechItem.js","components/techs/TechListModal.js","components/layout/Footer.js","components/layout/Header.js","reducers/logReducer.js","reducers/techReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["module","exports","setLoading","type","connect","searchLogs","text","dispatch","a","fetch","res","json","data","payload","response","statusText","useRef","style","marginBottom","className","id","placeholder","ref","onChange","e","current","value","htmlFor","AddBtn","href","deleteLog","method","setCurrent","log","attention","onClick","message","tech","format","date","M","toast","html","Preloader","state","getLogs","logs","loading","useEffect","fontFamily","length","map","key","getTechs","techs","t","firstName","lastName","modalStyle","width","height","addLog","body","JSON","stringify","headers","useState","setMessage","setAttention","setTech","textAlign","target","name","disabled","checked","newLog","Date","updateLog","updLog","addTech","setFirstName","setLastName","deleteTech","Footer","rel","Header","display","src","Logo","alt","initialState","error","combineReducers","action","filter","console","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","AutoInit","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6dc00fb6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default1.29bccc1d.png\";","module.exports = __webpack_public_path__ + \"static/media/default.04653daa.png\";","import {\r\n  GET_LOGS,\r\n  SET_LOADING,\r\n  LOGS_ERROR,\r\n  ADD_LOG,\r\n  DELETE_LOG,\r\n  UPDATE_LOG,\r\n  SEARCH_LOGS,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n} from \"./types\";\r\n\r\n// export const getLogs = () => {\r\n//   return async dispatch => {\r\n//     setLoading();\r\n\r\n//     const res = await fetch('/logs');\r\n//     const data = await res.json();\r\n\r\n//     dispatch({\r\n//       type: GET_LOGS,\r\n//       payload: data\r\n//     });\r\n//   };\r\n// };\r\n\r\n// Get logs from server\r\nexport const getLogs = () => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(\"/logs\");\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: GET_LOGS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\n// Add new log\r\nexport const addLog = (log) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(\"/logs\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(log),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: ADD_LOG,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\n// Delete log from server\r\nexport const deleteLog = (id) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    await fetch(`/logs/${id}`, {\r\n      method: \"DELETE\",\r\n    });\r\n\r\n    dispatch({\r\n      type: DELETE_LOG,\r\n      payload: id,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\n// Update log on server\r\nexport const updateLog = (log) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(`/logs/${log.id}`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(log),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: UPDATE_LOG,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\n// Search server logs\r\nexport const searchLogs = (text) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(`/logs?q=${text}`);\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: SEARCH_LOGS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\n// Set current log\r\nexport const setCurrent = (log) => {\r\n  return {\r\n    type: SET_CURRENT,\r\n    payload: log,\r\n  };\r\n};\r\n\r\n// Clear current log\r\nexport const clearCurrent = () => {\r\n  return {\r\n    type: CLEAR_CURRENT,\r\n  };\r\n};\r\n\r\n// Set loading to true\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING,\r\n  };\r\n};\r\n","export const GET_LOGS = \"GET_LOGS\";\r\nexport const ADD_LOG = \"ADD_LOG\";\r\nexport const DELETE_LOG = \"DELETE_LOG\";\r\nexport const SET_CURRENT = \"SET_CURRENT\";\r\nexport const CLEAR_CURRENT = \"CLEAR_CURRENT\";\r\nexport const UPDATE_LOG = \"UPDATE_LOG\";\r\nexport const CLEAR_LOGS = \"CLEAR_LOGS\";\r\nexport const SET_LOADING = \"SET_LOADING\";\r\nexport const LOGS_ERROR = \"LOGS_ERROR\";\r\nexport const SEARCH_LOGS = \"SEARCH_LOGS\";\r\nexport const GET_TECHS = \"GET_TECHS\";\r\nexport const ADD_TECH = \"ADD_TECH\";\r\nexport const DELETE_TECH = \"DELETE_TECH\";\r\nexport const TECHS_ERROR = \"TECHS_ERROR\";\r\n","import React, { useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { searchLogs } from \"../../actions/logActions\";\r\n\r\nconst SearchBar = ({ searchLogs }) => {\r\n  const text = useRef(\"\");\r\n  const onChange = (e) => {\r\n    searchLogs(text.current.value);\r\n  };\r\n  return (\r\n    <nav style={{ marginBottom: \"30px\" }} className=\"black\">\r\n      <div className=\"nav-wrapper\">\r\n        <form>\r\n          <div className=\"input-field\">\r\n            <input\r\n              id=\"search\"\r\n              type=\"search\"\r\n              placeholder=\"Search Logs......\"\r\n              ref={text}\r\n              onChange={onChange}\r\n            />\r\n            <label className=\"label-icon\" htmlFor=\"search\">\r\n              <i className=\"material-icons\">search</i>\r\n            </label>\r\n            <i className=\"material-icons\">close</i>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  searchLogs: PropTypes.func.isRequired,\r\n};\r\nexport default connect(null, { searchLogs })(SearchBar);\r\n","import React from \"react\";\r\n\r\nconst AddBtn = () => {\r\n  return (\r\n    <div className=\"fixed-action-btn\">\r\n      <a\r\n        href=\"#add-log-modal\"\r\n        className=\"btn-floating btn-large black darken-2 modal-trigger\"\r\n      >\r\n        <i className=\"large material-icons\">add</i>\r\n      </a>\r\n      <ul>\r\n        <li>\r\n          <a\r\n            href=\"#tech-list-modal\"\r\n            className=\"btn-floating green modal-trigger\"\r\n          >\r\n            <i className=\"material-icons\">person</i>\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a href=\"#add-tech-modal\" className=\"btn-floating red modal-trigger\">\r\n            <i className=\"material-icons\">person_add</i>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddBtn;\r\n","import React from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteLog, setCurrent } from \"../../actions/logActions\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\n\r\nconst LogItem = ({ log, deleteLog, setCurrent }) => {\r\n  const onDelete = () => {\r\n    deleteLog(log.id);\r\n    M.toast({ html: \"Log Deleted\" });\r\n  };\r\n  return (\r\n    <li className=\"collection-item\">\r\n      <div>\r\n        <a\r\n          href=\"#edit-log-modal\"\r\n          className={`modal-trigger ${\r\n            log.attention ? \"red-text\" : \"blue-text\"\r\n          }`}\r\n          onClick={() => setCurrent(log)}\r\n        >\r\n          {log.message}\r\n        </a>\r\n        <br />\r\n        <span className=\"grey-text\">\r\n          <span className=\"black-text\">ID #{log.id}</span> last updated by{\" \"}\r\n          <span className=\"black-text\">{log.tech}</span> on{\" \"}\r\n          <Moment format=\"MMMM Do YYYY, h:mm:ss a\">{log.date}</Moment>\r\n        </span>\r\n        <a href=\"#!\" onClick={onDelete} className=\"secondary-content\">\r\n          <i className=\"material-icons grey-text\">delete</i>\r\n        </a>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nLogItem.propTypes = {\r\n  log: PropTypes.object.isRequired,\r\n  deleteLog: PropTypes.func.isRequired,\r\n  setCurrent: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteLog, setCurrent })(LogItem);\r\n","import React from \"react\";\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <div className=\"progress blue lighten-4\">\r\n      <div className=\"indeterminate blue\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport LogItem from \"./LogItem\";\r\nimport Preloader from \"../layout/Preloader\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getLogs } from \"../../actions/logActions\";\r\nimport Logo from \"../../assets/default.png\";\r\nimport { Divider } from \"react-materialize\";\r\n\r\nconst Logs = ({ log: { logs, loading }, getLogs }) => {\r\n  useEffect(() => {\r\n    getLogs();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (loading || logs === null) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"collection with-header\">\r\n        <li className=\"collection-header\">\r\n          <h4 className=\"center\" style={{ fontFamily: \"Verdana\" }}>\r\n            System Logs\r\n          </h4>\r\n        </li>\r\n        {!loading && logs.length === 0 ? (\r\n          <p className=\"center\">No logs to show...</p>\r\n        ) : (\r\n          logs.map((log) => <LogItem log={log} key={log.id} />)\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nLogs.propTypes = {\r\n  log: PropTypes.object.isRequired,\r\n  getLogs: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  log: state.log,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getLogs })(Logs);\r\n","import {\r\n  GET_TECHS,\r\n  ADD_TECH,\r\n  DELETE_TECH,\r\n  SET_LOADING,\r\n  TECHS_ERROR,\r\n} from \"./types\";\r\n\r\n// Get techs from server\r\nexport const getTechs = () => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(\"/techs\");\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: GET_TECHS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\n// Add technician to server\r\nexport const addTech = (tech) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(\"/techs\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(tech),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: ADD_TECH,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteTech = (id) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    await fetch(`/techs/${id}`, {\r\n      method: \"DELETE\",\r\n    });\r\n\r\n    dispatch({\r\n      type: DELETE_TECH,\r\n      payload: id,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\n// Set loading to true\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING,\r\n  };\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getTechs } from \"../../actions/techActions\";\r\n\r\nconst TechSelectOptions = ({ getTechs, tech: { techs, loading } }) => {\r\n  useEffect(() => {\r\n    getTechs();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    !loading &&\r\n    techs !== null &&\r\n    techs.map((t) => (\r\n      <option key={t.id} value={`${t.firstName} ${t.lastName}`}>\r\n        {t.firstName} {t.lastName}\r\n      </option>\r\n    ))\r\n  );\r\n};\r\n\r\nTechSelectOptions.propTypes = {\r\n  tech: PropTypes.object.isRequired,\r\n  getTechs: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  tech: state.tech,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getTechs })(TechSelectOptions);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport TechSelectOptions from \"../techs/TechSelectOptions\";\r\nimport { addLog } from \"../../actions/logActions\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\n\r\nconst AddLogModal = ({ addLog }) => {\r\n  //states\r\n  const [message, setMessage] = useState(\"\");\r\n  const [attention, setAttention] = useState(false);\r\n  const [tech, setTech] = useState(\"\");\r\n  const onsubmit = () => {\r\n    if (message === \"\" || tech === \"\") {\r\n      M.toast({ html: \"Please enter a message and tech\" });\r\n    } else {\r\n      const newLog = {\r\n        message,\r\n        attention,\r\n        tech,\r\n        date: new Date(),\r\n      };\r\n\r\n      addLog(newLog);\r\n\r\n      M.toast({ html: `Log added by ${tech}` });\r\n      // Clear Fields\r\n      setMessage(\"\");\r\n      setTech(\"\");\r\n      setAttention(false);\r\n    }\r\n  };\r\n  return (\r\n    <div id=\"add-log-modal\" className=\"modal\" style={modalStyle}>\r\n      <div className=\"modal-content\">\r\n        <h4 style={{ fontFamily: \"Jura\", textAlign: \"center\" }}>\r\n          Enter System Log\r\n        </h4>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"text\"\r\n              message=\"message\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n            />\r\n            <label htmlFor=\"message\" className=\"active\">\r\n              Log Message\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <select\r\n              name=\"tech\"\r\n              value={tech}\r\n              className=\"browser-default\"\r\n              onChange={(e) => setTech(e.target.value)}\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select Technician\r\n              </option>\r\n              {/* will fetch the technicians from the database later */}\r\n\r\n              <TechSelectOptions />\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <p>\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"filled-in\"\r\n                  checked={attention}\r\n                  value={attention}\r\n                  onChange={(e) => setAttention(!attention)}\r\n                />\r\n                <span>Needs Attention</span>\r\n              </label>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n        <a\r\n          href=\"#!\"\r\n          onClick={onsubmit}\r\n          className=\"modal-close waves-effect blue wave-light btn\"\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddLogModal.propTypes = {\r\n  addLog: PropTypes.func.isRequired,\r\n};\r\n\r\nconst modalStyle = {\r\n  width: \"50%\",\r\n  height: \"50%\",\r\n};\r\nexport default connect(null, { addLog })(AddLogModal);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { updateLog } from \"../../actions/logActions\";\r\nimport TechSelectOptions from \"../techs/TechSelectOptions\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\n\r\nconst EditLogModal = ({ current, updateLog }) => {\r\n  //states\r\n  const [message, setMessage] = useState(\"\");\r\n  const [attention, setAttention] = useState(false);\r\n  const [tech, setTech] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (current) {\r\n      setMessage(current.message);\r\n      setAttention(current.attention);\r\n      setTech(current.tech);\r\n    }\r\n  }, [current]);\r\n  const onsubmit = () => {\r\n    if (message === \"\" || tech === \"\") {\r\n      M.toast({ html: \"Please enter a message and tech\" });\r\n    } else {\r\n      const updLog = {\r\n        id: current.id,\r\n        message,\r\n        attention,\r\n        tech,\r\n        date: new Date(),\r\n      };\r\n\r\n      updateLog(updLog);\r\n      M.toast({ html: `Log updated by ${tech}` });\r\n\r\n      // Clear Fields\r\n      setMessage(\"\");\r\n      setTech(\"\");\r\n      setAttention(false);\r\n    }\r\n  };\r\n  return (\r\n    <div id=\"edit-log-modal\" className=\"modal\" style={modalStyle}>\r\n      <div className=\"modal-content\">\r\n        <h4 style={{ fontFamily: \"Jura\" }}>Enter System Log</h4>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"text\"\r\n              message=\"message\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <select\r\n              name=\"tech\"\r\n              value={tech}\r\n              className=\"browser-default\"\r\n              onChange={(e) => setTech(e.target.value)}\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select Technician\r\n              </option>\r\n              <TechSelectOptions />\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <p>\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"filled-in\"\r\n                  checked={attention}\r\n                  value={attention}\r\n                  onChange={(e) => setAttention(!attention)}\r\n                />\r\n                <span>Needs Attention</span>\r\n              </label>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n        <a\r\n          href=\"#!\"\r\n          onClick={onsubmit}\r\n          className=\"modal-close waves-effect blue wave-light btn\"\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst modalStyle = {\r\n  width: \"75%\",\r\n  height: \"75%\",\r\n};\r\n\r\nEditLogModal.propTypes = {\r\n  current: PropTypes.object,\r\n  updateLog: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  current: state.log.current,\r\n});\r\nexport default connect(mapStateToProps, { updateLog })(EditLogModal);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { addTech } from \"../../actions/techActions\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\n\r\nconst AddTechModal = ({ addTech }) => {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n\r\n  const onSubmit = () => {\r\n    if (firstName === \"\" || lastName === \"\") {\r\n      M.toast({ html: \"Please enter the first and last name\" });\r\n    } else {\r\n      addTech({\r\n        firstName,\r\n        lastName,\r\n      });\r\n\r\n      M.toast({ html: `${firstName} ${lastName} was added as a tech` });\r\n\r\n      // Clear Fields\r\n      setFirstName(\"\");\r\n      setLastName(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"add-tech-modal\" className=\"modal\">\r\n      <div className=\"modal-content\">\r\n        <h4>New Technician</h4>\r\n        <br></br>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              value={firstName}\r\n              onChange={(e) => setFirstName(e.target.value)}\r\n            />\r\n            <label htmlFor=\"firstName\" className=\"active\">\r\n              First Name\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              value={lastName}\r\n              onChange={(e) => setLastName(e.target.value)}\r\n            />\r\n            <label htmlFor=\"lastName\" className=\"active\">\r\n              Last Name\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n        <a\r\n          href=\"#!\"\r\n          onClick={onSubmit}\r\n          className=\"modal-close waves-effect blue waves-light btn\"\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddTechModal.propTypes = {\r\n  addTech: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addTech })(AddTechModal);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { deleteTech } from \"../../actions/techActions\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\n\r\nconst TechItem = ({ tech: { id, firstName, lastName }, deleteTech }) => {\r\n  const onDelete = () => {\r\n    deleteTech(id);\r\n    M.toast({ html: \"Technician deleted\" });\r\n  };\r\n\r\n  return (\r\n    <li className=\"collection-item\">\r\n      <div>\r\n        {firstName} {lastName}\r\n        <a href=\"#!\" className=\"secondary-content\" onClick={onDelete}>\r\n          <i className=\"material-icons grey-text\">delete</i>\r\n        </a>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nTechItem.propTypes = {\r\n  tech: PropTypes.object.isRequired,\r\n  deleteTech: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteTech })(TechItem);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport TechItem from \"./TechItem\";\r\nimport { getTechs } from \"../../actions/techActions\";\r\n\r\nconst TechListModal = ({ getTechs, tech: { techs, loading } }) => {\r\n  useEffect(() => {\r\n    getTechs();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"tech-list-modal\" className=\"modal\">\r\n      <div className=\"modal-content\">\r\n        <h4>Technician List</h4>\r\n        <ul className=\"collection\">\r\n          {!loading &&\r\n            techs !== null &&\r\n            techs.map((tech) => <TechItem tech={tech} key={tech.id} />)}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTechListModal.propTypes = {\r\n  tech: PropTypes.object.isRequired,\r\n  getTechs: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  tech: state.tech,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getTechs })(TechListModal);\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer style={{ textAlign: \"center\" }}>\r\n      Created by{\" \"}\r\n      <a\r\n        href=\"https://www.saffataziz.site/\"\r\n        rel=\"noopener noreferrer\"\r\n        target=\"_blank\"\r\n      >\r\n        {\" \"}\r\n        Saffat Aziz\r\n      </a>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport Logo from \"../../assets/default1.png\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <img\r\n      style={{\r\n        width: \"400px\",\r\n        height: \"260px\",\r\n        textAlign: \"center\",\r\n        display: \"column\",\r\n      }}\r\n      src={Logo}\r\n      alt=\"\"\r\n    ></img>\r\n  );\r\n};\r\nexport default Header;\r\n","import {\r\n  GET_LOGS,\r\n  SET_LOADING,\r\n  LOGS_ERROR,\r\n  ADD_LOG,\r\n  DELETE_LOG,\r\n  UPDATE_LOG,\r\n  SEARCH_LOGS,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  logs: null,\r\n  current: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: action.payload,\r\n        loading: false,\r\n      };\r\n    case ADD_LOG:\r\n      return {\r\n        ...state,\r\n        logs: [...state.logs, action.payload],\r\n        loading: false,\r\n      };\r\n    case DELETE_LOG:\r\n      return {\r\n        ...state,\r\n        logs: state.logs.filter((log) => log.id !== action.payload),\r\n        loading: false,\r\n      };\r\n    case UPDATE_LOG:\r\n      return {\r\n        ...state,\r\n        logs: state.logs.map((log) =>\r\n          log.id === action.payload.id ? action.payload : log\r\n        ),\r\n      };\r\n    case SEARCH_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: action.payload,\r\n      };\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      };\r\n    case CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: null,\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case LOGS_ERROR:\r\n      console.error(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  GET_TECHS,\r\n  ADD_TECH,\r\n  DELETE_TECH,\r\n  SET_LOADING,\r\n  TECHS_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  techs: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_TECHS:\r\n      return {\r\n        ...state,\r\n        techs: action.payload,\r\n        loading: false,\r\n      };\r\n    case ADD_TECH:\r\n      return {\r\n        ...state,\r\n        techs: [...state.techs, action.payload],\r\n        loading: false,\r\n      };\r\n    case DELETE_TECH:\r\n      return {\r\n        ...state,\r\n        techs: state.techs.filter((tech) => tech.id !== action.payload),\r\n        loading: false,\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case TECHS_ERROR:\r\n      console.error(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport logReducer from \"./logReducer\";\r\nimport techReducer from \"./techReducer\";\r\nexport default combineReducers({\r\n  log: logReducer,\r\n  tech: techReducer,\r\n});\r\n","//redux store\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport SearchBar from \"./components/layout/SearchBar\";\r\nimport AddBtn from \"./components/layout/AddBtn\";\r\nimport Logs from \"./components/logs/Logs\";\r\nimport AddLogModal from \"./components/logs/AddLogModal\";\r\nimport EditLogModal from \"./components/logs/EditLogModal\";\r\nimport AddTechModal from \"./components/techs/AddTechModal\";\r\nimport TechListModal from \"./components/techs/TechListModal\";\r\nimport Footer from \"./components/layout/Footer\";\r\nimport Header from \"./components/layout/Header\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport \"./App.css\";\r\nimport \"materialize-css/dist/css/materialize.min.css\";\r\nimport Logo from \"./assets/default1.png\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\nconst App = () => {\r\n  useEffect(() => {\r\n    // Init Materialize JS\r\n    M.AutoInit();\r\n  });\r\n  return (\r\n    <div className=\"container\">\r\n      <Header />\r\n      <br></br>\r\n\r\n      <Provider store={store}>\r\n        <Fragment>\r\n          <SearchBar />\r\n          <AddBtn />\r\n          <AddLogModal />\r\n          <EditLogModal />\r\n          <AddTechModal />\r\n          <TechListModal />\r\n          <Logs />\r\n        </Fragment>\r\n      </Provider>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}